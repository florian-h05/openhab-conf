# description: Doorbell widget (designed for DoorBird video doorbells) with live video and speach support (SIP based), as well as light and relay controls, and doorbell pressed and motion state indicators with access the last event's image and timestamp
# note: The widget is updating it's style depending on the screen's dimensions. It's designed to be the only one on a full page!
# dependencies: "doorbellEvent" widget
# author: Copyright (c) 2022 Florian Hotze under MIT License
uid: doorbellPageWidget
tags:
  - doorbell
  - florianh-widgetset
props:
  parameters:
    - context: item
      description: Switch Item that controls the night vision
      label: Night vision
      name: item_light
      required: true
      type: TEXT
      groupName: doorbellControl
    - context: item
      description: Switch Item that controls the relay to open the door
      label: Door relay
      name: item_doorRelay
      required: true
      type: TEXT
      groupName: doorbellControl
    - context: item
      description: Switch Item that indicates whether the doorbell is currently pressed
      label: Doorbell pressed state
      name: item_doorbellPressed
      required: true
      type: TEXT
      groupName: doorbellPressedState
    - context: item
      description: Image Item that holds the event image when the doorbell was pressed
      label: Doorbell last pressed image
      name: item_buttonLastPressedImage
      required: true
      type: TEXT
      groupName: doorbellPressedState
    - context: item
      description: DateTime Item that holds the timestamp when the doorbell was pressed
      label: Doorbell last pressed timestamp
      name: item_buttonLastPressedTimestamp
      required: true
      type: TEXT
      groupName: doorbellPressedState
    - context: item
      description: Switch Item that indicates whether motion is currently detected
      label: Motion state
      name: item_motion
      required: true
      type: TEXT
      groupName: doorbellMotionState
    - context: item
      description: Image Item that holds the event image when motion was detected
      label: Last motion image
      name: item_lastMotionImage
      required: true
      type: TEXT
      groupName: doorbellMotionState
    - context: item
      description: DateTime Item that holds the timestamp when motion was detected
      label: Last motion timestamp
      name: item_lastMotionTimestamp
      required: true
      type: TEXT
      groupName: doorbellMotionState
    - description: Full URL of the image providing the liveview (the image is updated
        several times a second). Use the image if the MJPEG video stream is not
        stable
      label: Live image URL
      name: imageUrl
      required: true
      type: TEXT
      groupName: video
    - description: Full URL of the WebRTC SIP websocket, e.g. 'wss://siphost:8089/ws'
        or relative path, e.g. '/ws', for Android & iOS, you need wss (WebSocket
        secured)
      label: WebSocket URL
      name: websocketUrl
      required: true
      type: TEXT
      groupName: sipClient
    - description: SIP Domain
      label: Domain
      name: domain
      required: true
      type: TEXT
      groupName: sipClient
    - description: SIP Username
      label: Username
      name: username
      required: true
      type: TEXT
      groupName: sipClient
    - description: SIP Password
      label: Password
      name: password
      required: true
      type: TEXT
      groupName: sipClient
    - description: Single SIP Address (phone number) for a single call target or a
        comma-separated list of 'phoneNumber=name' for multiple call targets
      label: Phonebook
      name: phonebook
      required: false
      type: TEXT
      groupName: sipClient
    - context: item
      description: String Item to publish the SIP connection state to the openHAB server
        and make it accessible from rules etc.
      label: SIP State Item
      name: item_sipState
      required: false
      type: TEXT
      groupName: sipClient
      advanced: true
    - description: Enable SIP debugging to the console
      label: Enable SIP Debugging
      name: enableSIPDebug
      required: false
      type: BOOLEAN
      groupName: sipClient
      advanced: true
  parameterGroups:
    - name: doorbellControl
      label: Doorbell Control
      description: Configuration for controlling the doorbell and the door
    - name: video
      label: Video Configuration
      description: Configuration of the live video
    - name: sipClient
      label: SIP Client Configuration
      description: Configuration for the SIP client to talk with the doorbell
    - name: doorbellPressedState
      label: Doorbell Pressed State
      description: Configuration related to the doorbell's pressed state
    - name: doorbellMotionState
      label: Doorbell Motion State
      description: Configuration related to the doorbell's motion state
timestamp: Jul 5, 2024, 12:51:23 PM
component: f7-card
config:
  style:
    background-color: rgba(0,0,0,0.0)
    border-radius: var(--f7-card-expandable-border-radius)
    box-shadow: 0px 0px 0px 0px rgba(0,0,0,0)
    height: ='calc(' + screen.viewAreaHeight + 'px -
      2*var(--f7-block-padding-vertical))'
    margin: 0px
    padding: 0px
    width: 100%
slots:
  default:
    - component: oh-image
      config:
        lazy: false
        refreshInterval: 200
        style:
          border-radius: var(--f7-card-expandable-border-radius)
          box-shadow: 5px 5px 10px 1px rgba(0,0,0,0.1)
          margin-left: "=screen.viewAreaWidth <= (screen.viewAreaHeight * (4/3)) ? '0' :
            'calc(calc(100% - calc(96vh - var(--f7-navbar-height) -
            var(--f7-toolbar-height)) * (4/3)) / 2)'"
          width: "=screen.viewAreaWidth <= (screen.viewAreaHeight * (4/3)) ? '100%' :
            'calc(calc(95vh - var(--f7-navbar-height) -
            var(--f7-toolbar-height)) * (4/3))'"
        url: =props.imageUrl
    - component: f7-card
      config:
        style:
          border-radius: var(--f7-card-expandable-border-radius)
          bottom: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '' : '-10px'"
          box-shadow: 5px 5px 10px 1px rgba(0,0,0,0.1)
          height: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '330px' : '150px'"
          left: "=screen.viewAreaWidth >= screen.viewAreaHeight ? (screen.viewAreaWidth -
            (screen.viewAreaHeight * (4/3)) >= 360 ? 'calc(calc(100% - calc(96vh
            - var(--f7-navbar-height) - var(--f7-toolbar-height)) * (4/3)) / 2 -
            175px)' : '-10px') : '-10px'"
          min-width: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '' : '300px'"
          padding: 0px
          position: absolute
          top: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '-10px' : ''"
          width: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '150px' : '100%'"
      slots:
        default:
          - component: f7-block
            config:
              style:
                align-content: space-around
                display: flex
                flex-direction: "=screen.viewAreaWidth >= screen.viewAreaHeight ? 'column' :
                  'row'"
                height: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '298px' : '115px'"
                justify-content: space-around
                left: 0px
                margin-bottom: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '16px' : ''"
                position: absolute
                top: 0px
                width: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '150px' : '100%'"
            slots:
              default:
                - component: f7-block
                  config:
                    style:
                      align-content: space-around
                      display: flex
                      flex-direction: "=screen.viewAreaWidth >= screen.viewAreaHeight ? 'row' :
                        'column'"
                      height: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '40px' : '100%'"
                      justify-content: space-around
                      margin: 0 0 0 0
                      padding: 0 0 0 0
                      width: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '118px' : ''"
                  slots:
                    default:
                      - component: oh-button
                        config:
                          action: popup
                          actionModal: widget:doorbellEvent
                          actionModalConfig:
                            eventDescription: Letztes Klingeln
                            item_eventImage: =props.item_buttonLastPressedImage
                            item_eventTimestamp: =props.item_buttonLastPressedTimestamp
                          iconColor: "=items[props.item_doorbellPressed].state === 'ON' ?
                            (themeOptions.dark === 'dark' ? 'white' : 'black') :
                            'gray'"
                          iconF7: "=items[props.item_doorbellPressed].state === 'ON' ? 'bell' :
                            'bell_slash'"
                          iconSize: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '35' : '30'"
                          style:
                            --f7-button-height: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '35' :
                              '30'"
                            width: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '59px' : '100%'"
                      - component: oh-button
                        config:
                          action: popup
                          actionModal: widget:doorbellEvent
                          actionModalConfig:
                            eventDescription: Letzte Bewegung
                            item_eventImage: =props.item_lastMotionImage
                            item_eventTimestamp: =props.item_lastMotionTimestamp
                          iconColor: "=items[props.item_motion].state === 'ON' ? (themeOptions.dark ===
                            'dark' ? 'white' : 'black') : 'gray'"
                          iconF7: arrow_right_arrow_left
                          iconSize: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '35' : '30'"
                          style:
                            --f7-button-height: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '35' :
                              '30'"
                            width: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '59px' : '100%'"
                - component: oh-button
                  config:
                    action: command
                    actionCommand: ON
                    actionItem: =props.item_light
                    iconF7: lightbulb_fill
                    iconSize: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '60' : '40'"
                    style:
                      --f7-button-height: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '60px' :
                        '115px'"
                      padding-left: 0px
                      padding-right: 0px
                      width: 100%
                - component: f7-block
                  config:
                    style:
                      padding-left: 0px
                      padding-right: 0px
                      width: 100%
                  slots:
                    default:
                      - component: oh-sipclient
                        config:
                          disableRegister: true
                          domain: =props.domain
                          enableSIPDebug: =props.enableSIPDebug
                          enableTones: false
                          enableVideo: false
                          hideCallerId: true
                          iconSize: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '80' : '60'"
                          password: =props.password
                          phonebook: =props.phonebook
                          sipStateItem: =props.item_sipState
                          username: =props.username
                          websocketUrl: =props.websocketUrl
                - component: oh-button
                  config:
                    action: options
                    actionItem: =props.item_doorRelay
                    actionOptions: ON=Tür öffnen
                    iconF7: lock_open_fill
                    iconSize: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '60' : '40'"
                    style:
                      --f7-button-height: "=screen.viewAreaWidth >= screen.viewAreaHeight ? '60px' :
                        '115px'"
                      padding-left: 0px
                      padding-right: 0px
                      width: 100%
